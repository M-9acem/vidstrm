{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Downloads\\\\Compressed\\\\node-video-stream-main\\\\frontend\\\\video-stream-frontend\\\\src\\\\Components\\\\VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = _ref => {\n  _s();\n  let {\n    videoId\n  } = _ref;\n  const videoRef = useRef(null);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.pause();\n      videoRef.current.removeAttribute('src');\n      videoRef.current.load();\n    }\n  }, [videoId]); // Add videoId to the dependency array to reinitialize the video when videoId changes\n\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    width: \"320\",\n    height: \"240\",\n    controls: true,\n    autoPlay: true,\n    children: [/*#__PURE__*/_jsxDEV(\"source\", {\n      src: `http://localhost:3000/videos/${videoId}`,\n      type: \"video/mp4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), \"Your browser does not support the video tag.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useRef","useEffect","VideoPlayer","videoId","videoRef","current","pause","removeAttribute","load"],"sources":["C:/Users/asus/Downloads/Compressed/node-video-stream-main/frontend/video-stream-frontend/src/Components/VideoPlayer.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nconst VideoPlayer = ({ videoId }) => {\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current) {\r\n      videoRef.current.pause();\r\n      videoRef.current.removeAttribute('src');\r\n      videoRef.current.load();\r\n    }\r\n  }, [videoId]); // Add videoId to the dependency array to reinitialize the video when videoId changes\r\n\r\n  return (\r\n    <video ref={videoRef} width='320' height='240' controls autoPlay>\r\n      <source src={`http://localhost:3000/videos/${videoId}`} type='video/mp4' />\r\n      Your browser does not support the video tag.\r\n    </video>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEjD,MAAMC,WAAW,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAC9B,MAAMC,QAAQ,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACd,IAAIG,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACC,KAAK,EAAE;MACxBF,QAAQ,CAACC,OAAO,CAACE,eAAe,CAAC,KAAK,CAAC;MACvCH,QAAQ,CAACC,OAAO,CAACG,IAAI,EAAE;IACzB;EACF,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf,oBACE;IAAO,GAAG,EAAEC,QAAS;IAAC,KAAK,EAAC,KAAK;IAAC,MAAM,EAAC,KAAK;IAAC,QAAQ;IAAC,QAAQ;IAAA,wBAC9D;MAAQ,GAAG,EAAG,gCAA+BD,OAAQ,EAAE;MAAC,IAAI,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,gDAE7E;EAAA;IAAA;IAAA;IAAA;EAAA,QAAQ;AAEZ,CAAC;AAAC,GAjBID,WAAW;AAAA,KAAXA,WAAW;AAmBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}